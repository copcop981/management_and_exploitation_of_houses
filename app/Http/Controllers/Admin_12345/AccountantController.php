<?php

namespace App\Http\Controllers\Admin_12345;

use App\Models_12345\Qlv;
use Illuminate\Http\Request;
use App\Models_12345\Accountant;
use App\Http\Controllers\Controller;
use App\Repositories\AccountantQlvRepository;

class AccountantController extends Controller
{
    protected $aqRepo;
    public function __construct(AccountantQlvRepository $aqRepo) {
        $this->aqRepo = $aqRepo;
    }

    public function index() {
        $accountants = Accountant::paginate(5);
        $qlvs = Qlv::all();
        return view('admins.categories.accountant.index', [
            'accountants' => $accountants,
            'qlvs' => $qlvs,
        ]);
    }

    public function create() {
    }

    public function store(Request $req) {
        $fullname = $req->get('fullname');
        $phoneNumber = $req->get('phoneNumber');
        $listQlvId = $req->get('listQlvId');
        $data = $this->aqRepo->store(new Accountant, new Qlv, $fullname, $phoneNumber, $listQlvId, 'accountant_id', 'Káº¿ toÃ¡n');
        return response()->json($data);
    }

    public function show(Accountant $accountant) {
        $listQlvOfAccountant = Qlv::all()->where('accountant_id', $accountant->id);
        return response()->json([
            'status' => 200,
            'accountant' => $accountant,
            'listQlvOfAccountant' => $listQlvOfAccountant,
        ]);
    }

    public function edit(Accountant $accountant) {
        $data = $this->aqRepo->edit(new Qlv, 'accountant_id', $accountant, 'accountant', 'listQlv', 'qlvs');
        return response()->json($data);
    }

    public function update(Request $req, Accountant $accountant) {
        $id = $req->get('id');
        $fullname = $req->get('fullname');
        $phoneNumber = $req->get('phoneNumber');
        $listQlvId = $req->get('listQlvId');
        $data = $this->aqRepo->updatee(new Accountant, new Qlv, $id, $fullname, $phoneNumber, $listQlvId, 'accountant_id', $accountant, 'Káº¿ toÃ¡n');
        return response()->json($data); 
    }

    public function destroy(Accountant $accountant) {
        $data = $this->aqRepo->destroy(new Qlv, $accountant, 'accountant_id');
        return response()->json($data);
    }

    public function deleteMany(Request $req) {
        $allIds = $req->allIds;
        $data = $this->aqRepo->deleteMany(new Accountant, new Qlv, $allIds, 'accountant_id');
        return response()->json($data);
    }

    public function fetch(Request $req) {
        $qlvs = Qlv::all();
        if($req->ajax()) {
            if($req->numRow > 0) {
                $accountants = Accountant::paginate($req->numRow);
                return view('admins.categories.accountant.pagination', [
                    'accountants' => $accountants,
                    'qlvs' => $qlvs,
                ])->render();
            }
            $accountants = Accountant::paginate(5);
            return view('admins.categories.accountant.pagination', [
                'accountants' => $accountants,
                'qlvs' => $qlvs,
            ])->render();
        }
    }

    public function getRow(Request $req) {
        $numRow = $req->get('numRow');
        $data = $this->aqRepo->getRow($numRow, new Accountant, 'accountants', new Qlv, 'qlvs');
        return view('admins.categories.accountant.pagination', $data)->render();
    }

    public function search(Request $req) {
        $accountantName = $req->get('accountantName');
        $qlvName = $req->get('qlvName');
        $accountant_id = Qlv::where('fullname', $qlvName)->value('accountant_id');
        $accountants = Accountant::where('fullname', $accountantName)->orWhere('id', $accountant_id)->paginate();
        $qlvs = Qlv::all();
        return view('admins.categories.accountant.pagination', [
            'accountants' => $accountants,
            'qlvs' => $qlvs,
        ])->render();
    }
}
