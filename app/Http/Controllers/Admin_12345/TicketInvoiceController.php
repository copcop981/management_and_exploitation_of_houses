<?php

namespace App\Http\Controllers\Admin_12345;

use Carbon\Carbon;
use Illuminate\Http\Request;
use App\Models_12345\TicketType;
use App\Models_12345\InvoiceStatus;
use App\Http\Controllers\Controller;
use App\Models_12345\BillIssued;
use App\Models_12345\TicketObtained;
use App\Repositories\TicketInvoiceRepository;

class TicketInvoiceController extends Controller
{
    protected $tiRepo;
    public function __construct(TicketInvoiceRepository $tiRepo) {
        $this->tiRepo = $tiRepo;
    }

    public function index() {
        $ticketInvoices = $this->tiRepo->getListPaginates(5);
        $types = $this->tiRepo->getListByCol(new TicketObtained, 'ticket_name');
        $statuses = $this->tiRepo->getList(new InvoiceStatus);
        return view('admins.tickets.invoice-view.index', [
            'ticketInvoices' => $ticketInvoices,
            'types' => $types,
            'statuses' => $statuses,
        ]);
    }

    public function fetch(Request $req) {
        $ticketType = $req->get('ticketType');
        $invoiceStatusId = $req->get('invoiceStatusId');
        $fromDate = $req->get('fromDate');
        $toDate = $req->get('toDate');
        $addDate = Carbon::parse($toDate);
        
        $ticketInvoices = BillIssued::orderBy('id', 'DESC');
        if($ticketType != null || $invoiceStatusId != null || $fromDate != null || $toDate != null)
            $ticketInvoices = $this->tiRepo->searchTicket($ticketType, $invoiceStatusId, $fromDate, $addDate);
        if($req->ajax()) {
            if($req->numRow > 0) {
                $ticketInvoices = $ticketInvoices->paginate($req->numRow);
                return view('admins.tickets.invoice-view.pagination', [
                    'ticketInvoices' => $ticketInvoices,
                ])->render();
            }
            $ticketInvoices = $ticketInvoices->paginate(5);
            return view('admins.tickets.invoice-view.pagination', [
                'ticketInvoices' => $ticketInvoices,
            ])->render();
        }
    }

    public function getRow(Request $req) {
        $numRow = $req->get('numRow');
        $ticketType = $req->get('ticketType');
        $invoiceStatusId = $req->get('invoiceStatusId');
        $fromDate = $req->get('fromDate');
        $toDate = $req->get('toDate');
        $addDate = Carbon::parse($toDate);

        $ticketInvoices = BillIssued::orderBy('id', 'DESC');
        if($ticketType !== null || $invoiceStatusId != null || $fromDate != null || $toDate != null) 
            $ticketInvoices = $this->tiRepo->searchTicket($ticketType, $invoiceStatusId, $fromDate, $addDate);
        $ticketInvoices = $ticketInvoices->paginate($numRow);
        return view('admins.tickets.invoice-view.pagination', [
            'ticketInvoices' => $ticketInvoices,
        ])->render();
    }

    public function search(Request $req) {
        $ticketType = $req->get('ticketType');
        $invoiceStatusId = $req->get('invoiceStatusId');
        $fromDate = $req->get('fromDate');
        $toDate = $req->get('toDate');
        $addDate = Carbon::parse($toDate);

        if($ticketType == null && $invoiceStatusId == null && $fromDate == null && $toDate == null) {
            $ticketInvoices = $this->tiRepo->getListPaginates(15);
            return view('admins.tickets.invoice-view.pagination', [
                'ticketInvoices' => $ticketInvoices,
            ])->render();
        }
        $ticketInvoices = $this->tiRepo->searchTicket($ticketType, $invoiceStatusId, $fromDate, $addDate);
        $ticketInvoices = $ticketInvoices->paginate();
        return view('admins.tickets.invoice-view.pagination', [
            'ticketInvoices' => $ticketInvoices,
        ])->render();
    }
}
