<?php

namespace App\Http\Controllers\Admin_12345;

use App\Models_12345\Room;
use App\Models_12345\Block;
use App\Models_12345\Floor;
use App\Models_12345\Policy;
use Illuminate\Http\Request;
use App\Models_12345\Apartment;
use App\Models_12345\Household;
use App\Models_12345\UnitPrice;
use App\Models_12345\HouseholdRoom;
use App\Http\Controllers\Controller;
use App\Models_12345\ResidentObject;
use App\Repositories\ApartmentRepository;
use App\Repositories\AccountantQlvRepository;

class HouseholdController extends Controller
{
    protected $aqRepo;
    protected $apartmentRepo;
    public function __construct(AccountantQlvRepository $aqRepo, ApartmentRepository $apartmentRepo) {
        $this->aqRepo = $aqRepo;
        $this->apartmentRepo = $apartmentRepo;
    }

    public function index() {
        $households = Household::paginate(5);
        return view('admins.categories.household.index', [
            'households' => $households,
        ]);
    }

    public function create() {
        
    }

    public function store(Request $req) {
        $data = array();
        $householdName = $req->get('householdName');
        $roomId = $req->get('roomId');
        $residentObject = $req->get('residentObject');
        $price = $req->get('price');
        $exemption = $req->get('exemption');
        $priceAfterEx = $req->get('priceAfterEx');
        $contractSigningDate = $req->get('contractSigningDate');

        $policyId = Policy::where('exemption', $exemption)->value('id');
        $residentObjectId = ResidentObject::where('title', $residentObject)->value('id');

        $household = new Household;
        $household->fullname = $householdName;
        $query = $household->save();

        $householdRoom = new HouseholdRoom;
        $householdRoom->status_id = 1;
        $householdRoom->resident_object_id = $residentObjectId;
        $householdRoom->household_id = $household->id;
        $householdRoom->room_id = $roomId;
        $householdRoom->policy_id = $policyId;
        $householdRoom->contract_signing_date = $contractSigningDate;
        $query2 = $householdRoom->save();

        $unitPrice = new UnitPrice;
        $unitPrice->type_price_id = 1;
        $unitPrice->household_room_id = $householdRoom->id;
        $unitPrice->price = $price;
        $unitPrice->price_after_policy = $priceAfterEx;
        $query3 = $unitPrice->save();

        $query4 = Room::where('id', $roomId)->update(['status' => 1]);

        if($query > 0 && $query2 > 0 && $query3 > 0 && $query4 > 0) {
            $data['status'] = 200;
            $data['message'] = 'Tạo mới Hộ dân thành công';
        } else {
            $data['status'] = 400;
            $data['message'] = 'Tạo không thành công';
        }
        return response()->json($data);
    }

    public function show($id) {
        
    }

    public function edit(Household $household) {
        $apartments = $this->aqRepo->getList(new Apartment, 'apartments', 'name');

        $apartmentName = $household->householdRoom->room->apartment->name;
        $apartmentId = $this->apartmentRepo->getIdFromApartmentName($apartmentName);
        $blocks = Block::where('apartment_id', $apartmentId)->get();

        $blockName = $household->householdRoom->room->block->name;
        $blockId = $this->apartmentRepo->getBlockIdFromApartment($apartmentName, $blockName);
        $floors = Floor::where('block_id', $blockId)->get();

        $floorName = $household->householdRoom->room->floor->name;
        $roomName = $household->householdRoom->room->name;
        $floorId = $this->apartmentRepo->getFloorIdFromBlock($apartmentName, $blockName, $floorName);
        $rooms = Room::where('floor_id', $floorId)->where('status', 0)->get();

        $residentObject = $household->householdRoom->residentObject !== null ? $household->householdRoom->residentObject->title : '';
        $price = $household->householdRoom->unitPrice->price;
        $exemption = $household->householdRoom->policy !== null ? $household->householdRoom->policy->exemption : '';
        $contractSigningDate = $household->householdRoom->contract_signing_date;
        $data = [
            'status' => 200,
            'household' => $household,
            'apartmentName' => $apartmentName,
            'apartments' => $apartments,
            'blockName' => $blockName,
            'blocks' => $blocks,
            'floorName' => $floorName,
            'floors' => $floors,
            'roomName' => $roomName,
            'rooms' => $rooms,
            'residentObject' => $residentObject,
            'price' => $price,
            'exemption' => $exemption,
            'contractSigningDate' => $contractSigningDate,

        ];
        // $data = array_merge($apartments, $blocks, $floors, $rooms, $data5);
        return response()->json($data);
    }

    public function update(Request $req, $id) {
        
    }

    public function destroy($id) {
        
    }
}
