<?php

namespace App\Repositories;

use Illuminate\Http\Request;
use App\Models_12345\TicketType;
use App\Http\Requests\RequestResetPass;

class TicketTypeRepository extends AbstractRepository
{
    public function getModel()
    {
        return TicketType::class;
    }

    public function searchTicketType($search) {
        $types = $this->model->where('type', 'like', '%'.$search.'%')
                        ->orWhere('price', 'like', '%'.$search.'%')
                        ->orWhere('price_before_vat', 'like', '%'.$search.'%')
                        ->orWhere('vat', 'like', '%'.$search.'%')
                        ->orWhere('pattern', 'like', '%'.$search.'%')
                        ->orWhere('serial', 'like', '%'.$search.'%');
        return $types;
    }

    public function createe($params) {
        $checkIfExists = TicketType::where('type', $params['type'])->exists();
        if($checkIfExists) return 'Đã tồn tại';
        $query = $this->create($params);
        return $query;
    }

    public function updatee($id, $params) {
        if(count($params) == 6) {
            $exceptThisType = TicketType::where('id', $id)->value('type');
            $checkIfExists = TicketType::where('type', $params['type'])->whereNotIn('type', [$exceptThisType])->exists();
            if($checkIfExists) return 'Đã tồn tại';
        }
        $query = $this->update($id, $params);
        return $query;
    }

    public function deletee($id) {
        $query = $this->delete($id);
        return $query;
    }
}
