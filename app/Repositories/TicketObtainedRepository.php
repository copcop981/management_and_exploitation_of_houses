<?php

namespace App\Repositories;

use Carbon\Carbon;
use Illuminate\Http\Request;
use App\Models_12345\TicketType;
use App\Models_12345\TicketObtained;
use App\Http\Requests\RequestResetPass;
use App\Models_12345\TicketStatus;

class TicketObtainedRepository extends AbstractRepository
{
    public function getModel()
    {
        return TicketObtained::class;
    }

    public function getSoldTickets() {
        $tickets = $this->model->orderBy('id', 'DESC')->whereDate('ticket_issuing_time', Carbon::now());
        return $tickets;
    }

    public function getTicketTypesOnSale() {
        $ticketTypes = TicketType::orderBy('id', 'DESC')->where('status', 1)->get();
        return $ticketTypes;
    }

    public function getStatistic($col, $col_id, $today) {
        $statistical = $this->model->where($col, $col_id)->where('ticket_issuing_time', 'like', '%'.$today.'%')->count();
        return $statistical;
    }

    public function searchSoldTickets($search) {
        $statusId = TicketStatus::where('status', $search)->value('id');
        $tickets = $this->model->orderBy('id', 'DESC')
                                ->where('ticket_infor', 'like', '%'.$search.'%')
                                ->orWhere('ticket_issuing_time', 'like', '%'.$search.'%')
                                ->orWhere('ticket_name', 'like', '%'.$search.'%')
                                ->orWhere('ticket_price', $search)
                                ->orWhere('ticket_status_id', $statusId)
                                ->whereDate('ticket_issuing_time', Carbon::now());
        return $tickets;
    }

    public function getTicketTypeInforById($id) {
        $params = array();
        $query = TicketType::where('id', $id);
        $name = $query->value('type');
        $price = $query->value('price');
        $params['name'] = $name;
        $params['price'] = $price;
        return $params;
    }
}
