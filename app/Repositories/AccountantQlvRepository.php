<?php

namespace App\Repositories;

use Illuminate\Http\Request;
use App\Http\Requests\RequestResetPass;
use App\Models_12345\Accountant;

class AccountantQlvRepository extends AbstractRepository
{
    public function getModel()
    {
        return Accountant::class;
    }

    public function getList($model, $model_instances, $column) {
        $list = $model->orderBy($column)->get();
        return [
            'status' => 200,
            $model_instances => $list,
        ];
    }

    public function getListModel2ToModalWhereModel1IdEqs0($model2, $model2_instances, $model1_id) {
        $list = $model2->all()->where($model1_id, 0);
        return [
            'status' => 200,
            $model2_instances => $list,
        ];
    }

    public function store($model1, $model2, $fullname, $phoneNumber, $listModel2Id, $model1_id, $thiss) {
        $data = array();
        $isExists = $model1->where('fullname', $fullname)->where('phone_number', $phoneNumber)->first();
        if($isExists) {
            $data['status'] = 400;
            $data['message'] = $thiss.' này đã tồn tại';
        } else {
            $varModel1 = new $model1;
            $varModel1->fullname = $fullname;
            $varModel1->phone_number = $phoneNumber;
            $varModel1->save();
            if($listModel2Id !== null && count($listModel2Id) > 0) {
                $model2->whereIn('id', $listModel2Id)->update([
                    $model1_id => $varModel1->id,
                ]);
            }
            $data['status'] = 200;
            $data['message'] = 'Thêm '.$thiss.' thành công';
        }
        return $data;
    }

    public function edit($model2, $model1_id, $model1_instance, $_1, $_2, $_3) {
        $listModel2 = $model2->all()->whereIn($model1_id, [0, $model1_instance->id]);
        $model2s = $model2->all()->where($model1_id, $model1_instance->id);
        return [
            'status' => 200,
            $_1 => $model1_instance,
            $_2 => $listModel2,
            $_3  => $model2s,
        ];
    }
    
    public function updatee($model1, $model2, $id, $fullname, $phoneNumber, $listModel2Id, $model1_id, $model1_instance, $thiss) {
        $data = array();
        $exceptModel1 = $model1->where('id', $id)->value('phone_number');
        $isExists = $model1->where('phone_number', $phoneNumber)->whereNotIn('phone_number', [$exceptModel1])->first();
        if($isExists) {
            $data['status'] = 401;
            $data['message'] = $thiss.' đã tồn tại';
        } else {
            $query2 = 1;
            $isModel1HasModel2s = $model2->all()->where($model1_id, $model1_instance->id);
            if(count($isModel1HasModel2s) > 0 || count($listModel2Id) == 0) {
                $query2 = $model2->where($model1_id, $model1_instance->id)->update([
                    $model1_id => 0,
                ]);
            }
            if($listModel2Id !== null && count($listModel2Id) > 0) {
                $query2 = $model2->whereIn('id', $listModel2Id)->update([
                    $model1_id => $model1_instance->id,
                ]);
            }
            $query = $model1_instance->update([
                'fullname' => $fullname,
                'phone_number' => $phoneNumber,
            ]);
            if($query > 0 && $query2 > 0) {
                $data['status'] = 200;
                $data['message'] = 'Cập nhật '.$thiss.' thành công';
            } else {
                $data['status'] = 400;
                $data['message'] = 'Cập nhật không thành công';
            }
        }
        return $data;
    }

    public function destroy($model2, $model1_instance, $model1_id) {
        $data = array();
        $query = $model1_instance->delete();
        $query2 = 1;
        $isModel1HasModel2s = $model2->all()->where($model1_id, $model1_instance->id);
        if(count($isModel1HasModel2s) > 0)
            $query2 = $model2->where($model1_id, $model1_instance->id)->update([
                $model1_id => 0,
            ]);
        if($query > 0 && $query2 > 0) {
            $data['status'] = 200;
            $data['message'] = 'Đã xóa thành công';
        } else {
            $data['status'] = 400;
            $data['message'] = 'Xóa không thành công';
        }
        return $data;
    }

    public function deleteMany($model1, $model2, $allIds, $model1_id) {
        $data = array();
        $query = $model1->whereIn('id', $allIds)->delete();
        $query2 = 1;
        $isModel1HasModel2s = $model2->all()->whereIn($model1_id, $allIds);
        if(count($isModel1HasModel2s) > 0)
            $query2 = $model2->whereIn($model1_id, $allIds)->update([
                $model1_id => 0,
            ]);
        if($query > 0 && $query2 > 0) {
            $data['status'] = 200;
            $data['message'] = 'Đã xóa thành công';
        } else {
            $data['status'] = 400;
            $data['message'] = 'Xóa không thành công';
        }
        return $data;
    }

    public function getRow($numRow, $model1, $model1_instances, $model2, $model2_instances) {
        $list_model1 = $model1->paginate($numRow);
        $list_model2 = $model2->all();
        return [
            $model1_instances => $list_model1,
            $model2_instances => $list_model2,
        ];
    }
}
