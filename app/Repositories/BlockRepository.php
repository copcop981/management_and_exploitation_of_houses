<?php

namespace App\Repositories;

use App\Models\Block;
use Illuminate\Http\Request;
use App\Http\Requests\RequestResetPass;

class BlockRepository extends AbstractRepository
{
    public function getModel()
    {
        return Block::class;
    }

    public function getBlockByName($name) {

        return $this->model->where('name', $name)->first();


    }

    public function getBlockByApartmentId($params, $paradigm_id) {

        $blocks = $this->model->select()->orderBy('id','DESC');

        $blocks->where('paradigm_id', $paradigm_id);

        if (isset($params['apartment_id']) && $params['apartment_id'] !== null) {

            $blocks->where('apartment_id', $params['apartment_id']);

        }

        return $blocks->get();

    }

    public function getBlockByNameApartmentID($block_name, $apartment_id) {

        return $this->model->where('name', $block_name)
        ->where('apartment_id',$apartment_id)
        ->first();

    }

    public function getBlockByParams($params, $paradigm_id) {

        $blocks = $this->model->select()->orderBy('id','DESC');

        $blocks->where('paradigm_id', $paradigm_id);

        if (isset($params['block_id']) && $params['block_id'] !== null) {

            $blocks->where('id', $params['block_id']);

        }

        if (isset($params['apartment_id']) && $params['apartment_id'] !== null) {

            $blocks->where('apartment_id', $params['apartment_id']);

        }

        if (isset($params['paginate']) && $params['paginate'] > 0){

            $blocks->paginate($params['paginate']);

        }

        return $blocks->paginate(10);

    }

    public function deleteByIdByParadigmID($id, $paradigm_id) {

        return $this->model->where('id', $id)->where('paradigm_id', $paradigm_id)->delete();

    }
}
